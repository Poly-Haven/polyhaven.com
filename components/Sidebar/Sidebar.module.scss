@import "constants/colors";
@import "constants/mixins";
@import "constants/variables";

#sidebar {
  @include flex(column);
  position: fixed;
  flex-shrink: 0;
  height: calc(100vh - #{$v-header-height});
  width: 210px;
  background: $c-background-dark;
  text-transform: capitalize;
  z-index: 11;

  hr {
    width: 100%;
    border: none;
    border-top: 1px solid $c-background-lightish;
    margin: 0;
  }
}
.sidebarInner {
  padding-bottom: 3em;
  overflow: auto;
  overflow-x: hidden;
  @include dark_scrollbar;
}

.spacer {
  flex-grow: 1;
}

.footerWrapper {
  @include flex(column, true, true);
  padding-top: 0.25rem;
}
.footer {
  @include flex(row);
  font-size: 0.9em;
  gap: 0.5rem;
  padding: 0.5rem;

  p {
    text-transform: none;
    margin: 0;
    text-align: center;
    line-height: 1.2;

    a {
      color: $c-text-light;
      box-shadow: 0 1px 0 rgba($c-text-light, 0.5);

      &:hover {
        color: $c-accent-light;
        box-shadow: 0 3px 0 $c-accent;
      }
    }
  }
}

.sidebarToggle {
  display: none;
  position: fixed;
  top: calc(#{$v-header-height} + 0.5em);
  right: 0.5em;
  z-index: 11;

  @media screen and (max-width: 810px) {
    display: grid;
  }
}

.hiddenMobile {
  @media screen and (max-width: 810px) {
    display: none !important;
  }
}

.typeSelector {
  padding: 0.7rem 0.5rem 0;
  border-top: 1px solid $c-background;
  text-align: center;
  border-bottom: 1px solid $c-background;
  margin-bottom: 0.7rem;

  .type {
    display: inline;
    padding: 0 0.2em;
    text-align: center;
    text-decoration: none;
    color: $c-text-light;
    @include transition();

    img,
    svg {
      width: calc(2.5rem - 4px);
      height: calc(2.5rem - 4px);
      padding: 2px;
      background: $c-background;
      border-radius: 50%;
      box-shadow: inset 0px 0px 0px 1px rgba(white, 0.05);
    }
    svg {
      width: 1.5rem;
      height: 1.5rem;
      padding: 0.5rem;
    }

    &:hover {
      img,
      svg {
        background: $c-background-lighter;
        box-shadow: inset 0px 0px 0px 2px rgba($c-accent, 0.5);
      }

      & ~ h2 {
        visibility: hidden;
        font-size: 0;

        &:after {
          visibility: visible;
          font-size: 1.2rem;
        }
      }
    }
  }

  .activeType {
    filter: saturate(1);

    img,
    svg {
      background: $c-background-lighter;
      box-shadow: inset 0px 0px 0px 2px rgba($c-accent, 0.9);
    }
  }
  .desaturate {
    filter: saturate(0);
  }

  .typeAll:hover ~ h2:after {
    content: "All Assets";
  }
  .typeHDRI:hover ~ h2:after {
    content: "HDRIs";
  }
  .typeTex:hover ~ h2:after {
    content: "Textures";
  }
  .typeMod:hover ~ h2:after {
    content: "Models";
  }

  h2 {
    display: block;
    margin: 0;
    padding: 0.7rem;
    padding-top: 0.35rem;
    font-size: 1.2rem;
    text-align: center;
  }
}

.cat {
  display: block;
  text-decoration: none;
  color: $c-text-light;
  padding: 0.3em;
  cursor: pointer;
  white-space: nowrap;
  overflow: hidden;
  @include transition();

  .caret {
    position: relative;
    font-size: 140%;
    vertical-align: middle;
  }
  .smallCaret {
    @extend .caret;
    font-size: 90%;
  }

  .num {
    display: inline-block;
    line-height: 2em;
    width: 2em;
    height: 2em;
    margin-left: 0.5em;
    margin-top: -1px;
    vertical-align: middle;
    text-align: center;
    font-size: 70%;
    font-weight: 700;
    border: 1px solid rgba($c-text-light, 0.1);
    border-radius: 50%;
    background-color: rgba(white, 0.05);
    color: $c-text-light;
    opacity: 0.9;
    @include transition();
  }

  &:hover {
    background: $c-accent;

    .num {
      background-color: rgba(white, 0.15);
    }
  }
}

.subCat {
  margin-left: 6px;
  padding-left: 8px;
  border-bottom-left-radius: 7px;
  font-size: 93%;
  box-shadow: inset 2px -2px 0px 0px rgba($c-accent, 0.2);
  background: rgba($c-text-light, 0.02);
}

.catSemiActive {
  background: rgba($c-accent, 0.5);
  // color: white;
}
.catActive {
  background: $c-accent;
  color: white;

  .num {
    background-color: rgba(white, 0.15);
  }
}
