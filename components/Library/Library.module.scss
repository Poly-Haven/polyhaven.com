@import "constants/colors";
@import "constants/variables";
@import "constants/mixins";

#library {
  display: flex;
  flex-direction: row;
  flex-grow: 100;
  width: 100vh;
  direction: ltr;
}

.catBannerWrapper {
  width: 100%;
  overflow-x: auto;
  border-bottom: 2px solid $c-background-light;
  margin-bottom: 1.5rem;
  @include dark_scrollbar();

  h2 {
    margin-left: 2rem;
    margin-bottom: -1rem;
    margin-top: 1.5em;
  }
}

.catBannerFlex {
  position: relative;
  padding: 1.9em;
  @include flex(row, true);
  min-width: min-content;
  justify-content: center;
  gap: 1.9em;

  @media screen and (max-width: 810px) {
    flex-wrap: wrap;
  }

  .cat {
    position: relative;
    flex-shrink: 0;
    height: 180px;
    line-height: 0;
    @include transition(0.1s);
    box-shadow: 0 0 0 -1em rgba(0, 0, 0, 1);

    @media screen and (max-width: 810px) {
      height: calc(35vw);
    }

    &:hover {
      transform: translate(-0.2em, -0.3em);
      box-shadow: 0.5em 0.5em 2em 0 rgba(0, 0, 0, 0.2);
    }

    img {
      height: 100%;
    }

    p {
      position: absolute;
      bottom: 0;
      left: 0;
      text-transform: capitalize;
      color: $c-text-bright;
      font-weight: bold;
      padding: 0.2em 0.6em 0;
      font-size: 1.1em;
      line-height: 1em;
      text-shadow:
        1px 1px 1px rgb(0, 0, 0),
        1px 1px 3px rgba(0, 0, 0, 0.5);
      @include transition(0.1s);
    }
  }

  .modelCat {
    &:hover {
      background: rgba($c-background-lightish, 0.4);
      padding: 0.5em;
      margin: -0.5em;
      p {
        padding: 0.7em 1.1em;
      }
    }
  }
}
